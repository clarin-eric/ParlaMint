default namespace = "http://www.tei-c.org/ns/1.0"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

a:documentation [
  "RelaxNG XML schema for ParlaMint corpora: schema\x{a}" ~
  "  for component TEI file."
]
start =
  
  ## Root element of a ParlaMint component file.
  element TEI {
    id.att >> a:documentation [ "Obligatory @xml:id." ],
    
    ## Obligatory @xml:lang.
    attribute xml:lang { lang.vals },
    
    ## Obligatory @ana determining what scope this document has.
    attribute ana { anyURIs },
    teiHeader,
    text-body
  }
# METADATA
teiHeader =
  
  ## Metadata of the component.
  element teiHeader {
    global.atts, fileDesc, encodingDesc, profileDesc, revisionDesc?
  }
fileDesc =
  
  ## File description.
  element fileDesc {
    global.atts,
    titleStmt,
    editionStmt,
    extent,
    publicationStmt,
    sourceDesc
  }
titleStmt =
  
  ## Title statement.
  element titleStmt { title-header+, meeting+, respStmt*, funder* }
respStmt =
  
  ## Responsibility statement.
  element respStmt {
    (element persName { global.atts, ref.att, text }+,
     element resp { lang.att, text }+)+
  }
editionStmt =
  
  ## Edition statement.
  element editionStmt {
    element edition { text }
  }
extent =
  
  ## Extent of the document.
  element extent {
    element measure {
      attribute unit {
        # data type="NCName"/
        "speeches" | "words" | "tokens"
      },
      attribute quantity { xsd:integer },
      lang.att,
      text
    }+
  }
publicationStmt =
  
  ## Publications statement.
  element publicationStmt {
    publisher,
    idno,
    element availability {
      attribute status { "free" },
      element licence {
        # data type="anyURI"/
        "http://creativecommons.org/licenses/by/4.0/"
      },
      paras
    },
    date-simple
  }
sourceDesc =
  
  ## Source description.
  element sourceDesc {
    element bibl {
      title+,
      element edition { lang.att, text }*,
      publisher?,
      idno+,
      date*
    }+,
    element recordingStmt {
      element recording {
        attribute type { "audio" | "video" },
        attribute dur { xsd:duration }?,
        media+,
        respStmt*,
        time?,
        element equipment { abs }?
      }+
    }?
  }
encodingDesc =
  
  ## Encoding description.
  element encodingDesc {
    global.atts,
    element projectDesc { paras },
    tagsDecl
  }
profileDesc =
  
  ## Profile description.
  element profileDesc { global.atts, settingDesc }
revisionDesc =
  
  ## Revision description.
  element revisionDesc {
    global.atts,
    element change {
      attribute when { xsd:date },
      name-header,
      text
    }+
  }
tagsDecl =
  
  ## Tags declaration.
  element tagsDecl {
    element namespace {
      attribute name { xsd:anyURI },
      element tagUsage {
        attribute gi { xsd:Name },
        attribute occurs { xsd:nonNegativeInteger },
        text
      }+
    }
  }
settingDesc =
  
  ## Setting description.
  element settingDesc {
    element setting { name-header+, date }
  }
title-header =
  
  ## A title in the teiHeader. Must have a @type.
  element title {
    lang.att,
    
    ## @type is here obligatory.
    attribute type { "main" | "sub" },
    text
  }
title =
  
  ## A title in the text.
  element title {
    lang.att,
    
    ## @type is optional.
    attribute type { "main" | "sub" }?,
    text
  }
meeting = element meeting { global.atts, ana.att, corresp.att, text }
publisher =
  element publisher {
    lang.att,
    ((element orgName { lang.att, text }+,
      ref?)
     | text)
  }
funder =
  element funder {
    element orgName { lang.att, text }+,
    ref?
  }
idno =
  element idno {
    lang.att,
    attribute type { "URI" | "VIAF" | xsd:Name },
    attribute subtype { xsd:Name }?,
    xsd:anyURI { pattern = "https?://.+" }
  }
name-header =
  element name {
    attribute type { xsd:Name }?,
    attribute key { xsd:Name }?,
    lang.att,
    text
  }
# Paragraphs. Appear in the header only.
paras = element p { global.atts, annotated-text }+
# Anonymous blocks. Appear in the header only.
abs = element ab { global.atts, text }+
# DATA
text-body =
  element text {
    global.atts,
    ana.att,
    element body {
      element div {
        global.atts,
        attribute type { "debateSection" },
        head*,
        (note | comment | pb | u)+
      }+
    }
  }

## One speech (i.e. 'utterance').
u =
  element u {
    global.atts
    >> a:documentation [ "Attributes to link split utterances." ],
    attribute prev { xsd:anyURI }?,
    attribute next { xsd:anyURI }?,
    (who.att?)
    >> a:documentation [
         "Utterance has obligatory @ana, for the role of the speaker."
       ],
    ana.att,
    attribute source { anyURIs }?,
    (seg | comment | pb)+
  }
seg = element seg { global.atts, (comment | pb | text)+ }
note =
  element note {
    global.atts,
    attribute type { xsd:NCName }?,
    (time | pb | text)+
  }
pb = element pb { global.atts, corresp.att, source.att, empty }
comment =
  note
  | element gap {
      attribute reason { "editorial" | "inaudible" },
      desc+
    }
  | element kinesic {
      attribute type {
        "kinesic"
        | "applause"
        | "ringing"
        | "signal"
        | "playback"
        | "gesture"
        | "smiling"
        | "laughter"
        | "snapping"
        | "noise"
      }?,
      who.att?,
      desc+
    }
  | element incident {
      attribute type {
        "action"
        | "incident"
        | "leaving"
        | "entering"
        | "break"
        | "sound"
        | "editorial"
      }?,
      who.att?,
      desc+
    }
  | element vocal {
      attribute type {
        "greeting"
        | "question"
        | "clarification"
        | "speaking"
        | "interruption"
        | "exclamat"
        | "laughter"
        | "shouting"
        | "murmuring"
        | "noise"
        | "signal"
      },
      who.att?,
      desc+
    }
desc = element desc { lang.att, text }
# GENERALLY USEFUL DEFINITIONS
head =
  element head {
    attribute type { xsd:token }?,
    global.atts,
    text
    # oneOrMore>
    #   <choice>
    #     <ref name="note"/>
    #     <ref name="pb"/>
    #     <text/>
    #   </choice>
    # </oneOrMore
    
  }
ref =
  element ref {
    attribute target { xsd:anyURI },
    text
  }

## The media element
media =
  element media {
    global.atts,
    attribute mimeType { xsd:token },
    source.att,
    attribute url { anyURIs }
  }

## The time element
time = element time { temporal.atts, text }

## A simple date, just with @when. It can also have textual
##     content with the date type-set according to the object language.
date-simple = element date { when.att, text }

## A date with with all possible temporal information. It can also have textual
##     content with the date type-set according to the object language.
date = element date { global.atts, temporal.atts, ana.att?, text }
annotated-text = mixed { ref* }
temporal.val = xsd:dateTime | xsd:date | xsd:gYearMonth | xsd:gYear
when.att = attribute when { temporal.val }
temporal.atts =
  when.att
  | attribute from { temporal.val }
  | (attribute from { temporal.val },
     attribute to { temporal.val })
  | attribute notBefore { temporal.val }
  | (attribute notBefore { temporal.val },
     attribute notAfter { temporal.val })
who.att = attribute who { xsd:anyURI }
ref.att = attribute ref { xsd:anyURI }?
global.atts =
  id.att?,
  lang.att,
  attribute n { xsd:string }?

## "analysis" indicates one or more elements
##     containing interpretations of the element on which the ana
##     attribute appears.
ana.att = attribute ana { anyURIs }

## "corresponds" points to elements that correspond
##     to the current element in some way.
corresp.att = attribute corresp { anyURIs }?
source.att = attribute source { anyURIs }?

## A list of URI, including fragment references.
anyURIs = list { xsd:anyURI+ }

## Identifier of the element.
id.att = attribute xml:id { xsd:ID }

## The language of the element content. Optional
##     everywhere except on TEI and teiCorpus, where its is defined
##     separately.
lang.att = attribute xml:lang { lang.vals }?

## Values for @xml:lang - specified sloppily!
lang.vals = xsd:language
